{"version":3,"file":"static/js/493.ed7e15b4.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactList.jsx","components/Filter/Filter.jsx","components/Filter/Filter.styled.jsx","components/Modal.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx","pages/Home.jsx","pages/LogIn.jsx","pages/NewUser.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\n","import { Form, Input, Subtitle } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { InputMask } from 'primereact/inputmask';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport { Button, SvgIcon } from '@mui/material';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 300,\n  bgcolor: '#f5f5fa',\n  borderRadius: '50px',\n  boxShadow:\n    '0 4px 11px 0 rgb(37 44 97 / 15%), 0 1px 3px 0 rgb(93 100 148 / 20%)',\n  p: 4,\n};\n\nexport const ContactForm = ({ onClose }) => {\n  const allContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = ev => {\n    ev.preventDefault();\n    const currentElement = ev.currentTarget.elements;\n    const name = currentElement.name.value.trim();\n    const phone = currentElement.number.value;\n\n    const newContact = { name, phone };\n\n    ev.target.reset();\n    const existedContact = allContacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (existedContact) {\n      Notify.warning(`${newContact.name} is already in your contacts`);\n    } else {\n      dispatch(addContact(newContact));\n      Notify.success('Contact is saved');\n      onClose();\n    }\n  };\n\n  return (\n    <Box sx={style}>\n      <Subtitle>Add new contact</Subtitle>\n      <Form onSubmit={onSubmitForm}>\n        <label htmlFor=\"name\">\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label htmlFor=\"number\">\n          <Input\n            as={InputMask}\n            type=\"tel\"\n            name=\"number\"\n            mask=\"+39 999-9999999\"\n            placeholder=\"Phone number\"\n            required\n          />\n        </label>\n        <Button\n          type=\"sybmit\"\n          sx={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n\n            width: '45px',\n            color: 'rgb(72, 76, 122)',\n            boxShadow:\n              '0 4px 11px 0 rgb(37 44 97 / 15%), 0 1px 3px 0 rgb(93 100 148 / 20%)',\n            transition: 'all 0.2s ease-out',\n          }}\n        >\n          <SvgIcon\n            component={PersonAddIcon}\n            sx={{ fontSize: '20px', color: 'rgb(72, 76, 122)' }}\n          ></SvgIcon>\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: stretch;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  border: 0;\n  border-radius: 4px;\n  padding-left: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  box-shadow: 0 4px 11px 0 rgb(37 44 97 / 15%),\n    0 1px 3px 0 rgb(93 100 148 / 20%);\n  transition: all 0.2s ease-out;\n  background-image: linear-gradient(180deg, #fff, #f5f5fa);\n  :focus {\n    box-shadow: 0 8px 22px 0 rgb(37 44 97 / 15%),\n      0 4px 6px 0 rgb(93 100 148 / 20%);\n  }\n  :focus-visible {\n    outline: none;\n  }\n  ::placeholder {\n    color: rgb(72, 76, 122);\n  }\n`;\nexport const Subtitle = styled.h2`\n  text-align: center;\n  font-size: 22px;\n  color: rgb(72, 76, 122);\n`;\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Button, SvgIcon } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useEffect } from 'react';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { selectFilter, selectContacts } from 'redux/contacts/selectors';\n\nconst style = {\n  fontWeight: '700',\n};\n\nexport const ContactList = () => {\n  const allContacts = useSelector(selectContacts);\n  const filterName = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const normalizedFilter = filterName ? filterName.toLowerCase() : '';\n  const filteredContacts = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  const handleDeleteContact = contactId => {\n    const confirmAction = async () => {\n      await dispatch(deleteContact(contactId));\n      dispatch(fetchContacts());\n    };\n    Confirm.show(\n      'Delete contact',\n      'Are you sure you want to delete the contact?',\n      'Yes',\n      'Cancel',\n      confirmAction,\n      () => {\n        return;\n      }\n    );\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch, filterName]);\n\n  return filteredContacts.length === 0 ? (\n    <p>No matched contacts in your phone book</p>\n  ) : (\n    <TableContainer component={Paper} sx={{ marginTop: '20px' }}>\n      <Table sx={{ width: '100%' }} aria-label=\"simple table\">\n        <TableHead sx={{ fontWeight: '700' }}>\n          <TableRow>\n            <TableCell sx={style}>Contact name</TableCell>\n            <TableCell sx={style} align=\"center\">\n              Phone Number\n            </TableCell>\n            <TableCell sx={style} align=\"center\">\n              Delete contact\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredContacts.map(contact => {\n            const nameArray = contact.name.split(' ');\n            const nameFirstUpperLetter = nameArray\n              .map(word => word.replace(word[0], word[0].toUpperCase()))\n              .join(' ');\n            return (\n              <TableRow\n                key={nameFirstUpperLetter}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {nameFirstUpperLetter}\n                </TableCell>\n                <TableCell align=\"center\">{contact.number}</TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    type=\"button\"\n                    id={contact.id}\n                    sx={{\n                      width: '45px',\n                      color: 'rgb(72, 76, 122)',\n                    }}\n                    onClick={() => handleDeleteContact(contact.id)}\n                  >\n                    <SvgIcon\n                      component={DeleteIcon}\n                      sx={{ fontSize: '20px', color: 'rgb(72, 76, 122)' }}\n                    ></SvgIcon>\n                  </Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { InputFilter } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newFilterName } from 'redux/contacts/slice/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const Filter = () => {\n  const filterName = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = ev => {\n    const filterValue = ev.currentTarget.value;\n    dispatch(newFilterName(filterValue));\n  };\n\n  return (\n    <label htmlFor=\"name\">\n      <InputFilter\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Find contacts by name\"\n        value={filterName}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InputFilter = styled.input`\n  box-sizing: border-box;\n  width: 200px;\n  border: 0;\n  border-radius: 4px;\n  padding-left: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  box-shadow: 0 4px 11px 0 rgb(37 44 97 / 15%),\n    0 1px 3px 0 rgb(93 100 148 / 20%);\n  transition: all 0.2s ease-out;\n  background-image: linear-gradient(180deg, #fff, #f5f5fa);\n  :focus {\n    box-shadow: 0 8px 22px 0 rgb(37 44 97 / 15%),\n      0 4px 6px 0 rgb(93 100 148 / 20%);\n  }\n  :focus-visible {\n    outline: none;\n  }\n  ::placeholder {\n    color: rgb(72, 76, 122);\n  }\n`;\n","import { Button, Modal, SvgIcon } from '@mui/material';\nimport { ContactForm, NewContactForm } from 'components';\nimport { useState } from 'react';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\nexport const ModalNewContact = () => {\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  return (\n    <NewContactForm>\n      <Button\n        onClick={handleOpen}\n        type=\"sybmit\"\n        sx={{\n          marginLeft: 'auto',\n          marginRight: 'auto',\n\n          width: '45px',\n          color: 'rgb(72, 76, 122)',\n          boxShadow:\n            '0 4px 11px 0 rgb(37 44 97 / 15%), 0 1px 3px 0 rgb(93 100 148 / 20%)',\n          transition: 'all 0.2s ease-out',\n        }}\n      >\n        <SvgIcon\n          component={PersonAddIcon}\n          sx={{ fontSize: '20px', color: 'rgb(72, 76, 122)' }}\n        ></SvgIcon>\n      </Button>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <div>\n          <ContactForm onClose={handleClose} />\n        </div>\n      </Modal>\n    </NewContactForm>\n  );\n};\n","import styled from '@emotion/styled';\nexport const PhoneBookForm = styled.div`\n  width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  padding: 30px 20px;\n  background-color: #f5f5fa;\n  border-radius: 50px;\n`;\nexport const InfoTable = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: start;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n  margin-top: 0;\n  color: rgb(72, 76, 122);\n`;\n\nexport const NewContactForm = styled.div`\n  text-align: center;\n`;\nexport const ContactListForm = styled.div`\n  text-align: center;\n  width: 100%;\n`;\n","import {\n  ContactList,\n  Filter,\n  PhoneBookForm,\n  Title,\n  ContactListForm,\n} from 'components';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'primeicons/primeicons.css';\nimport {\n  selectError,\n  selectIsLoading,\n  selectContacts,\n} from 'redux/contacts/selectors';\nimport { LoaderProgress } from 'components/LoaderProgress';\nimport { Box } from '@mui/material';\nimport { ModalNewContact } from 'components/Modal';\nconst style = {\n  display: 'flex',\n  justifyContent: 'space-evenly',\n  alignItems: 'center',\n  width: '100%',\n};\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const allContacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <PhoneBookForm>\n      <ContactListForm>\n        <Title>My Contacts</Title>\n        {isLoading && <LoaderProgress />}\n        {error && <p>{error.message}</p>}\n        {allContacts.length === 0 ? (\n          !isLoading && (\n            <Box sx={style}>\n              <ModalNewContact />\n              <p>No saved contacts</p>\n            </Box>\n          )\n        ) : (\n          <div>\n            <Box sx={style}>\n              <ModalNewContact />\n              <Filter />\n            </Box>\n            <ContactList />\n          </div>\n        )}\n      </ContactListForm>\n    </PhoneBookForm>\n  );\n}\n","import { Box } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from 'components/useAuth';\n\nexport default function Home() {\n  const { isLoggedIn } = useAuth();\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        marginTop: '150px',\n      }}\n    >\n      <h1>Welcome to your Phone Book</h1>\n      {isLoggedIn ? (\n        <p>\n          Visit your <Link to=\"./contacts\">Contacts Page</Link>\n        </p>\n      ) : (\n        <p>\n          To start, please <Link to=\"./login\">sign in</Link> or\n          <Link to=\"./register\"> create new account.</Link>\n        </p>\n      )}\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nexport default function LogIn() {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n\n          <Grid item>\n            <Link href=\"./register\" variant=\"body2\">\n              {\"Don't have an account? Sign Up\"}\n            </Link>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\nexport default function NewUser() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link href=\"./login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","p","ContactForm","onClose","allContacts","useSelector","dispatch","useDispatch","Box","sx","Subtitle","Form","onSubmit","ev","preventDefault","currentElement","currentTarget","elements","newContact","name","value","trim","phone","number","target","reset","find","contact","toLowerCase","Notify","addContact","htmlFor","Input","type","placeholder","pattern","title","required","as","InputMask","mask","Button","marginLeft","marginRight","color","transition","SvgIcon","component","PersonAddIcon","fontSize","styled","fontWeight","ContactList","filterName","normalizedFilter","filteredContacts","includes","useEffect","fetchContacts","length","TableContainer","Paper","marginTop","Table","TableHead","TableRow","TableCell","align","TableBody","map","nameFirstUpperLetter","split","word","replace","toUpperCase","join","border","scope","id","onClick","contactId","confirmAction","deleteContact","Confirm","handleDeleteContact","DeleteIcon","Filter","InputFilter","onChange","filterValue","newFilterName","ModalNewContact","useState","open","setOpen","handleClose","NewContactForm","Modal","PhoneBookForm","Title","ContactListForm","display","justifyContent","alignItems","Contacts","LoaderProgress","message","Home","isLoggedIn","useAuth","flexDirection","to","LogIn","maxWidth","m","variant","e","form","logIn","email","password","noValidate","mt","margin","fullWidth","label","autoComplete","autoFocus","mb","item","href","NewUser","register","container","spacing","xs"],"sourceRoot":""}