{"version":3,"file":"static/js/2.c07ac01f.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactList.styled.jsx","components/Filter/Filter.jsx","components/Filter/Filter.styled.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filters;\n\n","import { Form, Input, ButtonForm, BtnNewName } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { InputMask } from 'primereact/inputmask';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const allContacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  const onSubmitForm = ev => {\n    ev.preventDefault();\n    const currentElement = ev.currentTarget.elements;\n    const name = currentElement.name.value.trim();\n    const number = currentElement.number.value;\n\n    const newContact = { name, number };\n\n    ev.target.reset();\n    const existedContact = allContacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    if (existedContact) {\n      alert(`${newContact.name} is already in your contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmitForm}>\n      <label htmlFor=\"name\">\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\">\n        <Input\n          as={InputMask}\n          type=\"tel\"\n          name=\"number\"\n          mask=\"+39 999-9999999\"\n          placeholder=\"Phone number\"\n          required\n        />\n      </label>\n      <ButtonForm type=\"submit\">\n        <BtnNewName className=\"pi pi-user-plus\"></BtnNewName>\n      </ButtonForm>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: stretch;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 150px;\n  border: 0;\n  padding-left: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  box-shadow: 0 4px 11px 0 rgb(37 44 97 / 15%),\n    0 1px 3px 0 rgb(93 100 148 / 20%);\n  transition: all 0.2s ease-out;\n  background-image: linear-gradient(180deg, #fff, #f5f5fa);\n  :focus {\n    box-shadow: 0 8px 22px 0 rgb(37 44 97 / 15%),\n      0 4px 6px 0 rgb(93 100 148 / 20%);\n  }\n  :focus-visible {\n    outline: none;\n  }\n  ::placeholder {\n    color: rgb(72, 76, 122);\n  }\n`;\n\nexport const ButtonForm = styled.button`\n  outline: 0;\n  border: 0;\n  cursor: pointer;\n  font-weight: 600;\n  color: rgb(72, 76, 122);\n  padding: 10px;\n  border-radius: 50%;\n  width: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  background-image: linear-gradient(180deg, #fff, #f5f5fa);\n  box-shadow: 0 4px 11px 0 rgb(37 44 97 / 15%),\n    0 1px 3px 0 rgb(93 100 148 / 20%);\n  transition: all 0.2s ease-out;\n  :hover {\n    box-shadow: 0 8px 22px 0 rgb(37 44 97 / 15%),\n      0 4px 6px 0 rgb(93 100 148 / 20%);\n  }\n`;\nexport const BtnNewName = styled.span`\n  font-size: 16px;\n  color: rgb(72, 76, 122);\n`;\n","import {\n  ButtonDelete,\n  ListItem,\n  List,\n  ListItemText,\n  BtnName,\n} from 'components';\nimport { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { selectFilter, selectContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const allContacts = useSelector(selectContacts);\n  const filterName = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const normalizedFilter = filterName.toLowerCase();\n  const filteredContacts = allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  const handleDeleteContact = async contactId => {\n    if (window.confirm('Are you sure you want to delete the contact?')) {\n      await dispatch(deleteContact(contactId));\n      dispatch(fetchContacts());\n    }\n  };\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch, filterName]);\n\n  return filteredContacts.length === 0 ? (\n    <p>No matched contacts in your phone book</p>\n  ) : (\n    <List>\n      {filteredContacts.map(contact => {\n        const nameArray = contact.name.split(' ');\n        const nameFirstUpperLetter = nameArray\n          .map(word => word.replace(word[0], word[0].toUpperCase()))\n          .join(' ');\n        return (\n          <ListItem key={contact.id}>\n            <ListItemText>{nameFirstUpperLetter}</ListItemText>\n            <ListItemText>{contact.number}</ListItemText>\n            <ButtonDelete\n              type=\"ButtonDelete\"\n              id={contact.id}\n              onClick={() => handleDeleteContact(contact.id)}\n            >\n              <BtnName className=\"pi pi-trash\"></BtnName>\n            </ButtonDelete>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-left: 0px;\n`;\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const ListItemText = styled.p`\n  width: 120px;\n  font-size: 14px;\n  color: rgb(72, 76, 122);\n  text-align: left;\n`;\n\nexport const ButtonDelete = styled.button`\n  outline: 0;\n  border: 0;\n  cursor: pointer;\n  font-weight: 600;\n  color: rgb(72, 76, 122);\n  padding: 10px;\n  margin-left: 10px;\n  border-radius: 50%;\n  width: 40px;\n  background-image: linear-gradient(180deg, #fff, #f5f5fa);\n  box-shadow: 0 4px 11px 0 rgb(37 44 97 / 15%),\n    0 1px 3px 0 rgb(93 100 148 / 20%);\n  transition: all 0.2s ease-out;\n  :hover {\n    box-shadow: 0 8px 22px 0 rgb(37 44 97 / 15%),\n      0 4px 6px 0 rgb(93 100 148 / 20%);\n  }\n`;\n\nexport const BtnName = styled.span`\n  font-size: 16px;\n  color: rgb(72, 76, 122);\n`;\n","import { InputFilter } from 'components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newFilterName } from 'redux/slice/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filterName = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = ev => {\n    const filterValue = ev.currentTarget.value;\n    dispatch(newFilterName(filterValue));\n  };\n\n  return (\n    <label htmlFor=\"name\">\n      <InputFilter\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Find contacts by name\"\n        value={filterName}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const InputFilter = styled.input`\n  box-sizing: border-box;\n  width: 200px;\n  border: 0;\n  padding-left: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  box-shadow: 0 4px 11px 0 rgb(37 44 97 / 15%),\n    0 1px 3px 0 rgb(93 100 148 / 20%);\n  transition: all 0.2s ease-out;\n  background-image: linear-gradient(180deg, #fff, #f5f5fa);\n  :focus {\n    box-shadow: 0 8px 22px 0 rgb(37 44 97 / 15%),\n      0 4px 6px 0 rgb(93 100 148 / 20%);\n  }\n  :focus-visible {\n    outline: none;\n  }\n  ::placeholder {\n    color: rgb(72, 76, 122);\n  }\n`;\n","import styled from '@emotion/styled';\nexport const PhoneBookForm = styled.div`\n  width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  padding: 30px 20px;\n  background-color: #f5f5fa;\n  border-radius: 50px;\n`;\nexport const InfoTable = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: start;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin: 0;\n  color: rgb(72, 76, 122);\n`;\n\nexport const Subtitle = styled.h2`\n  font-size: 22px;\n  color: rgb(72, 76, 122);\n`;\n\nexport const NewContactForm = styled.div`\n  text-align: center;\n`;\nexport const ContactListForm = styled.div`\n  text-align: center;\n  width: 500px;\n`;\n\nexport const Loader = styled.span`\n  width: 16px;\n  height: 16px;\n  border-radius: 50%;\n  display: block;\n  margin: 50px auto;\n  position: relative;\n  background: rgb(72, 76, 122);\n  box-shadow: -24px 0 rgb(72, 76, 122), 24px 0 rgb(72, 76, 122);\n  box-sizing: border-box;\n  animation: shadowPulse 2s linear infinite;\n\n  @keyframes shadowPulse {\n    33% {\n      background: rgb(72, 76, 122);\n      box-shadow: -24px 0 #ff3d00, 24px 0 rgb(72, 76, 122);\n    }\n    66% {\n      background: #ff3d00;\n      box-shadow: -24px 0 rgb(72, 76, 122), 24px 0 rgb(72, 76, 122);\n    }\n    100% {\n      background: rgb(72, 76, 122);\n      box-shadow: -24px 0 rgb(72, 76, 122), 24px 0 #ff3d00;\n    }\n  }\n`;\n","import {\n    ContactList,\n    Filter,\n    ContactForm,\n    InfoTable,\n    PhoneBookForm,\n    Title,\n    NewContactForm,\n    Subtitle,\n    ContactListForm,\n    Loader,\n  } from 'components';\n  import { useEffect } from 'react';\n  import { fetchContacts } from 'redux/operations';\n  import { useDispatch, useSelector } from 'react-redux';\n  import 'primeicons/primeicons.css';\n  import { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\n  \n  export const ContactsPage = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const allContacts = useSelector(selectContacts);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n    return (\n      <PhoneBookForm>\n        <Title>My Phonebook</Title>\n        <InfoTable>\n          <NewContactForm>\n            <Subtitle>Add new contact</Subtitle>\n            <ContactForm />\n          </NewContactForm>\n  \n          <ContactListForm>\n            <Subtitle>My contacts</Subtitle>\n  \n            {isLoading && <Loader />}\n            {error && <p>{error.message}</p>}\n            {allContacts.length === 0 ? (\n              !isLoading && <p>No saved contacts</p>\n            ) : (\n              <div>\n                <Filter />\n                <ContactList />\n              </div>\n            )}\n          </ContactListForm>\n        </InfoTable>\n      </PhoneBookForm>\n    );\n  };\n  \n  "],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filters","ContactForm","allContacts","useSelector","dispatch","useDispatch","Form","onSubmit","ev","preventDefault","currentElement","currentTarget","elements","newContact","name","value","trim","number","target","reset","find","contact","toLowerCase","alert","addContact","htmlFor","Input","type","placeholder","pattern","title","required","as","InputMask","mask","ButtonForm","BtnNewName","className","styled","ContactList","filterName","normalizedFilter","filteredContacts","filter","includes","handleDeleteContact","contactId","window","confirm","deleteContact","fetchContacts","useEffect","length","List","map","nameFirstUpperLetter","split","word","replace","toUpperCase","join","ListItem","ListItemText","ButtonDelete","id","onClick","BtnName","Filter","InputFilter","onChange","filterValue","newFilterName","PhoneBookForm","InfoTable","Title","Subtitle","NewContactForm","ContactListForm","Loader","ContactsPage","message"],"sourceRoot":""}